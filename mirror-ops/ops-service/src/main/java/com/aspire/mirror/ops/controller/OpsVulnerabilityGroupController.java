package com.aspire.mirror.ops.controller;

import com.aspire.mirror.ops.api.domain.GeneralResponse;
import com.aspire.mirror.ops.api.domain.PageListQueryResult;
import com.aspire.mirror.ops.api.domain.vulnerability.BatchExecuteVulnerabilityReqModel;
import com.aspire.mirror.ops.api.domain.vulnerability.VulnerabilityGroup;
import com.aspire.mirror.ops.api.domain.vulnerability.VulnerabilityGroupQueryModel;
import com.aspire.mirror.ops.api.domain.vulnerability.OpsVulnerability;
import com.aspire.mirror.ops.api.service.IOpsVulnerabilityGroupService;
import com.aspire.mirror.ops.biz.OpsVulnerabilityGroupBiz;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

/**
 * TODO
 * <p>
 * 项目名称:  mirror平台
 * 包:        com.aspire.mirror.ops.controller
 * 类名称:    OpsVulnerabilityGroupController.java
 * 类描述:    TODO
 * 创建人:    JinSu
 * 创建时间:  2020/7/7 16:08
 * 版本:      v1.0
 */
@RestController
@Slf4j
public class OpsVulnerabilityGroupController implements IOpsVulnerabilityGroupService {
    @Autowired
    private OpsVulnerabilityGroupBiz opsVulnerabilityGroupBiz;

    @Override
    public PageListQueryResult<VulnerabilityGroup> queryVulnerabilityGroupList(@RequestBody VulnerabilityGroupQueryModel queryParam) {
        if (queryParam == null) {
            log.warn("OpsVulnerabilityGroupController[queryVulnerabilityGroupList] param is null");
            return null;
        }
        return opsVulnerabilityGroupBiz.queryVulnerabilityGroupList(queryParam);
    }

    @Override
    public GeneralResponse saveVulnerabilityGroup(@RequestBody VulnerabilityGroup vulnerabilityGroup) {
        if (vulnerabilityGroup == null) {
            log.warn("OpsVulnerabilityGroupController[saveVulnerabilityGroup] param is null");
            return new GeneralResponse(false);
        }
        return opsVulnerabilityGroupBiz.saveVulnerabilityGroup(vulnerabilityGroup);
    }

    @Override
    public VulnerabilityGroup getVulnerabilityGroup(@RequestParam("vulnerabilityGroupId") Long vulnerabilityGroupId) {
        return opsVulnerabilityGroupBiz.getVulnerabilityGroup(vulnerabilityGroupId);
    }

    @Override
    public GeneralResponse removeVulnerabilityGroup(@RequestParam("vulnerabilityGroupId") Long vulnerabilityGroupId) {
        return opsVulnerabilityGroupBiz.removeVulnerabilityGroup(vulnerabilityGroupId);
    }

    @Override
    public GeneralResponse addVulnerabilityGroupRelation(@RequestBody OpsVulnerability opsVulnerability) {
        return opsVulnerabilityGroupBiz.addVulnerabilityGroupRelation(opsVulnerability);
    }

}
