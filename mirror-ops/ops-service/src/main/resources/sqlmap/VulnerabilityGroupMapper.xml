<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aspire.mirror.ops.dao.VulnerabilityGroupDao">
    <resultMap type="com.aspire.mirror.ops.api.domain.vulnerability.VulnerabilityGroup" id="vulnerabilityGroup">
        <result property="vulnerabilityGroupId" column="vulnerability_group_id" jdbcType="BIGINT"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="vulnerabilityGroupDesc" column="vulnerability_group_desc" jdbcType="VARCHAR"/>
        <result property="vulnerabilityGroupRule" column="vulnerability_group_rule" jdbcType="VARCHAR"/>
        <result property="isValid" column="is_valid" jdbcType="VARCHAR"/>
        <result property="creater" column="creater" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updater" column="updater" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="orderNum" column="order_num" jdbcType="INTEGER"/>
    </resultMap>
    <select id="queryVulnerabilityGroupListTotalSize" resultType="java.lang.Integer"
            parameterType="com.aspire.mirror.ops.api.domain.vulnerability.VulnerabilityGroup">
        select count(v.vulnerability_group_id)
        from ops_vulnerability_group v
        where 1 = 1
        <if test="vulnerabilityGroupId != null">
            and v.vulnerability_group_id = #{vulnerabilityGroupId}
        </if>
        <if test="nameLike != null and nameLike != ''">
            and v.name like CONCAT('%', #{nameLike}, '%')
        </if>
        <if test="isValid != null and isValid != ''">
            and v.is_valid = #{isValid}
        </if>
        <if test="vulnerabilityGroupDesc != null and vulnerabilityGroupDesc != ''">
            and v.vulnerability_group_desc = #{vulnerabilityGroupDesc}
        </if>
        <if test="creater != null and creater != ''">
            and v.creater = #{creater}
        </if>
        <if test="createTimeStart != null">
            and v.create_time &gt;= #{createTimeStart}
        </if>
        <if test="createTimeEnd != null">
            and v.create_time &lt;= #{createTimeEnd}
        </if>
        <if test="updateTimeStart != null">
            and v.update_time &gt;= #{updateTimeStart}
        </if>
        <if test="updateTimeEnd != null">
            and v.update_time &lt;= #{updateTimeEnd}
        </if>
        <if test="updater != null and updater != ''">
            and v.updater = #{updater}
        </if>
    </select>
    <sql id="vulnerabilityGroupAllColumns">
        v.vulnerability_group_id, v.name, v.vulnerability_group_desc, v.vulnerability_group_rule, v.is_valid, v.creater, v.create_time, v.updater, v.update_time, v.order_num
    </sql>
    <select id="queryVulnerabilityGroupList" parameterType="com.aspire.mirror.ops.api.domain.vulnerability.VulnerabilityGroupQueryModel" resultMap="vulnerabilityGroup">
        select <include refid="vulnerabilityGroupAllColumns"/>
        from ops_vulnerability_group v
        where 1 = 1
        <if test="vulnerabilityGroupId != null">
            and v.vulnerability_group_id = #{vulnerabilityGroupId}
        </if>
        <if test="nameLike != null and nameLike != ''">
            and v.name like CONCAT('%', #{nameLike}, '%')
        </if>
        <if test="isValid != null and isValid != ''">
            and v.is_valid = #{isValid}
        </if>
        <if test="vulnerabilityGroupDesc != null and vulnerabilityGroupDesc != ''">
            and v.vulnerability_group_desc = #{vulnerabilityGroupDesc}
        </if>
        <if test="creater != null and creater != ''">
            and v.creater = #{creater}
        </if>
        <if test="createTimeStart != null">
            and v.create_time &gt;= #{createTimeStart}
        </if>
        <if test="createTimeEnd != null">
            and v.create_time &lt;= #{createTimeEnd}
        </if>
        <if test="updateTimeStart != null">
            and v.update_time &gt;= #{updateTimeStart}
        </if>
        <if test="updateTimeEnd != null">
            and v.update_time &lt;= #{updateTimeEnd}
        </if>
        <if test="updater != null and updater != ''">
            and v.updater = #{updater}
        </if>
        order by v.order_num
        <if test="pageSize != null and pageSize > 0 ">
            limit #{startIdx}, #{pageSize}
        </if>
    </select>
    <select id="getVulnerabilityGroupById" parameterType="java.lang.Long" resultMap="vulnerabilityGroup">
        select <include refid="vulnerabilityGroupAllColumns"/>
        from ops_vulnerability_group v
        where v.vulnerability_group_id = #{vulnerabilityGroupId}
    </select>
    <insert id="insertVulnerabilityGroup" useGeneratedKeys="true" keyColumn="vulnerability_group_id" keyProperty="vulnerabilityGroupId"
            parameterType="com.aspire.mirror.ops.api.domain.vulnerability.VulnerabilityGroup">
        insert into ops_vulnerability_group (
        name,
        vulnerability_group_desc,
        vulnerability_group_rule,
        is_valid,
        creater,
        create_time,
        updater,
        update_time,
        order_num
        ) values (
        #{name},
        #{vulnerabilityGroupDesc},
        #{vulnerabilityGroupRule},
        #{isValid},
        #{creater},
        #{createTime},
        #{updater},
        #{updateTime},
        #{orderNum}
        )
    </insert>
    <select id="queryLastIndex" resultType="java.lang.Integer">
        select max(order_num) from ops_vulnerability_group where order_num  <![CDATA[ <> ]]> 9999
    </select>
    <update id="updateVulnerabilityGroup" parameterType="com.aspire.mirror.ops.api.domain.vulnerability.VulnerabilityGroup">
        update ops_vulnerability_group
        set vulnerability_group_id = #{vulnerabilityGroupId}
        <if test="name != null and name != ''">
            , name = #{name}
        </if>
        <if test="vulnerabilityGroupDesc != null and vulnerabilityGroupDesc != ''">
            , vulnerability_group_desc = #{vulnerabilityGroupDesc}
        </if>
        <if test="vulnerabilityGroupRule != null and vulnerabilityGroupRule != ''">
            , vulnerability_group_rule = #{vulnerabilityGroupRule}
        </if>
        <if test="isValid != null and isValid != ''">
            , is_valid = #{isValid}
        </if>
        <if test="updater != null">
            , updater = #{updater}
        </if>
        <if test="updateTime != null">
            , update_time = #{updateTime}
        </if>
        where vulnerability_group_id = #{vulnerabilityGroupId}
    </update>
    <delete id="deleteVulnerabilityGroupById" parameterType="java.lang.Long">
        delete from ops_vulnerability_group where vulnerability_group_id = #{vulnerabilityGroupId}
    </delete>
    <select id="queryByName" parameterType="java.lang.String" resultMap="vulnerabilityGroup">
        select <include refid="vulnerabilityGroupAllColumns"/>
        from ops_vulnerability_group v
        where v.name = #{name}
    </select>
    <insert id="insertGroupRelation" parameterType="com.aspire.mirror.ops.api.domain.vulnerability.VulnerabilityGroupRelation">
        insert into ops_vulnerability_group_relation
        (vulnerability_group_id, vulnerability_id)
        values (
        #{vulnerabilityGroupId},
        #{vulnerabilityId}
        )
    </insert>
    <delete id="deleteGroupRelationByVulnerabilityIds" parameterType="java.util.Set">
        delete from  ops_vulnerability_group_relation
        where vulnerability_id in (
        <foreach collection="vulnerabilityIds.split(',')" item="item"  index="index" separator=",">
            #{item}
        </foreach>
        )
    </delete>
    <select id="queryGroupRelationByVulnerabilityGroupId" parameterType="java.lang.Long" resultType="com.aspire.mirror.ops.api.domain.vulnerability.VulnerabilityGroupRelation">
        select vulnerability_group_id vulnerabilityGroupId,
        vulnerability_id vulnerabilityId from ops_vulnerability_group_relation where vulnerability_group_id = #{vulnerabilityGroupId}
    </select>
</mapper>