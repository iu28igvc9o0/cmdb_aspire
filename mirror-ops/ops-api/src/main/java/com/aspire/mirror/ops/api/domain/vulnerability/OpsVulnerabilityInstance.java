package com.aspire.mirror.ops.api.domain.vulnerability;

import java.util.Date;

import cn.afterturn.easypoi.excel.annotation.Excel;
import com.fasterxml.jackson.annotation.JsonFormat;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.BeanUtils;

import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.Data;
import org.springframework.format.annotation.DateTimeFormat;

/** 
 *
 * 项目名称: ops-api 
 * <p/>
 * 
 * 类名: OpsVulnerabilityInstance
 * <p/>
 *
 * 类功能描述: 漏洞实例信息
 * <p/>
 *
 * @author	pengguihua
 *
 * @date	2020年7月7日  
 *
 * @version	V1.0 
 * <br/>
 *
 * <b>Copyright(c)</b> 2020 卓望公司-版权所有 
 *
 */
@Data
public class OpsVulnerabilityInstance {
	public static String OPERATE_GO_BACK = "goBack";
	public static String OPERATE_REPAIR = "repair";
	public static String OPERATE_RECHECK = "repair";
	// 漏洞状态枚举
	public static enum VulnerabilityStatus {
		// 未修复， 无法修复，已修复
		WAIT_REPAIR, BEYOND_REPAIR, PROCESSED;
	}
	// 带漏洞基本信息
	@Excel(name = "漏洞ID", width = 20)
	protected String vulId;
	@Excel(name = "CVE编号", width = 20)
	protected String		cveNumber;
	@Excel(name = "漏洞名称", width = 30)
	protected String vulName;
	//	protected String 		canFixed;
	@Excel(name = "是否重启", width = 10, replace = {"是_Y", "否_N"})
	protected String		needReboot;
	protected String		riskLevel;
	@Excel(name = "风险等级", width = 10)
	protected String riskLevelDesc;

	@Excel(name = "端口", width = 10)
	protected String port;
	@Excel(name = "协议", width = 10)
	protected String protocol;
	@Excel(name = "服务", width = 20)
	protected String service;
	//	protected String		cveNumber;
	@Excel(name = "漏洞描述", width = 20)
	protected String vulDescribe;

	@Excel(name = "解决办法", width = 30)
	protected String		repairMethod;

	protected Long					id;
	protected String				scanCycle;		// yyyyMM
	@Excel(name = "资源池", width = 30)
	protected String				poolName;
	@Excel(name = "一级部门", width = 20)
	protected String department1;
	@Excel(name = "二级部门", width = 20)
	protected String department2;
	@Excel(name = "业务系统", width = 20)
	protected String bizSystem;
	@Excel(name = "IP地址", width = 20)
	protected String				hostIp;
	@Excel(name = "操作系统", width = 20)
	protected String osType;

	@Excel(name = "是否可修复", width = 20, replace = {"是_Y", "否_N"})
	protected String 		canFixed;

	@Excel(name = "修复状态", width = 20, replace = {"等待修复_WAIT_REPAIR", "无法修复_BEYOND_REPAIR", "已修复_PROCESSED"})
	protected String				status;

	@Excel(name = "是否已修复", replace = {"是_Y", "否_N"})
	protected String 		isFixed;

	@JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	@Excel(name = "修复时间", format = "yyyy-MM-dd HH:mm:ss", width = 30)
	protected Date repairTime;
	@Excel(name = "修复人", width = 20)
	protected String repairPerson;
	protected Boolean				isAgentRun;		// 是否部署了agent
	protected String				vulnerabilityId;

//	@JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")
	@JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	protected String				reportTime;
	@Excel(name = "回退时间", format = "yyyy-MM-dd HH:mm:ss", width = 30)
	@JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	protected Date goBackTime;
	@Excel(name = "回退人", width = 20)
	protected String goBackPerson;
	protected String				lastOperator;	// 最后操作人
	protected Date					lastUpdateTime;	// 最后更新时间
	@Excel(name = "复查时间", format = "yyyy-MM-dd HH:mm:ss", width = 30)
	@JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	protected Date recheckTime;
	@Excel(name = "复查人", width = 20)
	protected String recheckPerson;

	protected Long			groupId;

	@Excel(name = "漏洞分组", width = 20)
	protected String		groupName;

	@Excel(name = "发现厂家", replace = {"绿盟_lvmeng", "启明星辰_qiming"})
	protected String discoverProducer;

//	protected String department1Name;
//	protected String department2Name;
//	protected String bizSystemName;






	//	@JsonProperty("system_version")
//	@JsonFormat(timezone = "GMT+8", pattern = "yyyy-MM-dd HH:mm:ss")
//	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
//	protected Date repairTime;
//	protected String repairPerson;
	protected Long repairPipelineInstanceId;

	protected Long goBackPipelineInstanceId;
	protected String bizEmployee;

	protected Long recheckPipelineInstanceId;


	public OpsVulnerabilityInstance copy() {
		OpsVulnerabilityInstance copy = new OpsVulnerabilityInstance();
		BeanUtils.copyProperties(this, copy);
		if (StringUtils.isNotBlank(this.getStatus())) {
			copy.setStatus(Enum.valueOf(VulnerabilityStatus.class, this.getStatus()));
		}
		return copy;
	}
	
	public void setStatus(VulnerabilityStatus status) {
		if (status != null) {
			this.status = status.name();
		}
	}
	
	@JsonIgnore
	public Boolean getAgentRun() {
		return isAgentRun;
	}

	public void setAgentRun(String agentRun) {
		isAgentRun = "Y".equals(agentRun) ? true : false;
	}
}
