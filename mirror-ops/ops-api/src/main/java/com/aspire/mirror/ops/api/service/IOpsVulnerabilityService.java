package com.aspire.mirror.ops.api.service;

import com.aspire.mirror.ops.api.domain.vulnerability.*;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.aspire.mirror.ops.api.domain.GeneralResponse;
import com.aspire.mirror.ops.api.domain.PageListQueryResult;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

import java.util.List;
import java.util.Map;

/**
 * @projectName: IOpsVulnerabilityService
 * @description: 接口
 * @author: luowenbo
 * @create: 2020-07-09 10:10
 **/
@Api("漏洞管理")
@RequestMapping(value = "/v1/ops-service/vulnerability")
public interface IOpsVulnerabilityService {

    @PostMapping(value = "/queryVulnerabilityList", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "查询漏洞列表", notes = "查询漏洞列表", response = GeneralResponse.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = PageListQueryResult.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    PageListQueryResult<OpsVulnerability> queryVulnerabilityList(@RequestBody OpsVulnerabilityQueryModel queryParam);

    @GetMapping(value = "/queryVulnerabilityById", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "通过Id,查询特定漏洞", notes = "通过Id,查询特定漏洞", response = GeneralResponse.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = OpsVulnerability.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    OpsVulnerability getVulnerabilityById(@RequestParam("vulnerabilityId") String vulId);

    @PutMapping(value = "/updateVulnerability", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "修改漏洞信息", notes = "修改漏洞信息", response = GeneralResponse.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = GeneralResponse.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    GeneralResponse updateVulnerability(@RequestBody OpsVulnerability vul);

    @PostMapping(value = "/saveVulnerability", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "创建漏洞信息", notes = "创建漏洞信息", response = GeneralResponse.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = GeneralResponse.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    GeneralResponse saveVulnerability(@RequestBody OpsVulnerability vul);

    @GetMapping(value = "/riskLevelList", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "查询危险等级列表", notes = "查询危险等级列表", response = GeneralResponse.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = GeneralResponse.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    List<Object> getRiskLevelList();

    @PostMapping(value = "/queryVulInstanceList", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "查询漏洞实例列表", notes = "查询漏洞实例列表", response = GeneralResponse.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = PageListQueryResult.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    PageListQueryResult<OpsVulnerabilityInstance> queryVulnerabilityInstanceList(@RequestBody OpsVulnerabilityInstanceQueryModel queryParam);

    @PutMapping(value = "/updateVulInstance", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "修改漏洞实例信息", notes = "修改漏洞实例信息", response = GeneralResponse.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = GeneralResponse.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    GeneralResponse updateVulInstance(@RequestBody OpsVulnerabilityInstance vulInstance);

    @PutMapping(value = "/executeVulnerabilityRepair/{vulInstanceId}/{pipelineId}/{operateType}", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "执行漏洞修复作业", notes = "执行漏洞修复作业", response = GeneralResponse.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = GeneralResponse.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    GeneralResponse executeVulnerabilityRepair(@PathVariable("vulInstanceId") Long vulInstanceId, 
			@PathVariable("pipelineId") Long pipelineId, @PathVariable("operateType") String operateType);
    
    @GetMapping(value = "/loadCurrScanCycleVulnerabilityData", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "加载当前周期漏洞数据", notes = "加载当前周期漏洞数据", response = GeneralResponse.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = GeneralResponse.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    GeneralResponse loadCurrScanCycleVulnerabilityData();

    @PostMapping(value = "/addBatchVulnerability", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "批量新增漏洞数据", notes = "批量新增漏洞数据", response = Map.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = Map.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    Map<String, Integer> addBatchVulnerability(@RequestBody BatchVulnerabilityRequest batchVulnerabilityRequest);

    @PostMapping(value = "/saveVulnerabilityInstance", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "新增漏洞实例数据", notes = "新增漏洞实例数据", response = Map.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = Map.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    GeneralResponse saveVulnerabilityInstance(@RequestBody OpsVulnerabilityInstance vul);


    @PostMapping(value = "/vulnerabilityReport", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "漏洞报告获取", notes = "漏洞报告获取", response = OpsVulnerabilityReportItem.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = OpsVulnerabilityReportItem.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    List<OpsVulnerabilityReportItem> vulnerabilityReport(@RequestBody OpsVulnerabilityReportQuery queryParam);

    @PostMapping(value = "/vulNewReport", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "新漏洞报告获取", notes = "新漏洞报告获取", response = OpsVulnerabilityReportItem.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = OpsVulnerabilityReportItem.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    PageListQueryResult<OpsVulnerabilityNewReportItem> vulNewReport(@RequestBody OpsVulNewReportQuery queryParam);

    @GetMapping(value = "/loadPoolCodeNameMapList", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "加载资源池名称与编码对应关系", notes = "加载资源池名称与编码对应关系", response = OpsVulPoolCodeNameMap.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = OpsVulPoolCodeNameMap.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    List<OpsVulPoolCodeNameMap> loadPoolCodeNameMapList();

    @GetMapping(value = "/getScanCycleList", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "获取周期列表", notes = "获取周期列表", response = OpsVulScanCycle.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = OpsVulScanCycle.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    List<OpsVulScanCycle> getScanCycleList();

    @GetMapping(value = "/getVulnerabilityInstanceDetailById", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "获取漏洞实例详情", notes = "获取漏洞实例详情", response = Map.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = Map.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    OpsVulnerabilityInstanceDetail getVulnerabilityInstanceDetailById(@RequestParam("vulInstanceId") Long vulInstanceId);

    @PutMapping(value = "/batchExecuteVulnerabilityRepair", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "批量执行漏洞修复", notes = "批量执行漏洞修复", response = GeneralResponse.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = GeneralResponse.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    GeneralResponse batchExecuteVulnerabilityRepair(@RequestBody BatchExecuteVulnerabilityReqModel execVulModel);

    @PostMapping(value = "/saveVulScanCycle", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "保存漏洞周期", notes = "保存漏洞周期", response = GeneralResponse.class, tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回", response = GeneralResponse.class),
            @ApiResponse(code = 500, message = "Unexpected error")})
    GeneralResponse saveVulScanCycle(@RequestBody OpsVulScanCycle opsVulScanCycle);

    @PostMapping(value = "/queryVulReportDetailStatistics", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "查看漏洞报告详情统计", notes = "查看漏洞报告详情统计", tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回"),
            @ApiResponse(code = 500, message = "Unexpected error")})
    List<VulReportDetailStatistics> queryVulReportDetailStatistics(@RequestBody OpsVulNewReportQuery queryParam);

    @PostMapping(value = "/queryVulReportItemList", produces = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "查看漏洞报告元素列表", notes = "查看漏洞报告元素列表", tags = {"vulnerability service API"})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "返回"),
            @ApiResponse(code = 500, message = "Unexpected error")})
    PageListQueryResult<VulReportDetailItem> queryVulReportItemList(@RequestBody OpsVulNewReportQuery queryParam);
}
