<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.migu.tsg.microservice.atomicservice.architect.dao.ProjectTemplateDao">

	<resultMap id="ProjectTemplateResultMap"
		type="com.migu.tsg.microservice.atomicservice.architect.dao.po.ProjectTemplate">
		<id column="uuid" property="uuid" />
		<result column="name" property="name" />
		<result column="created_at" property="createdAt" />
		<result column="updated_at" property="updatedAt" />
		<collection property="projectTemplateItems" javaType="list"
			ofType="com.migu.tsg.microservice.atomicservice.architect.dao.po.ProjectTemplateItem">
			<result column="template_uuid" property="templateUuid"/>
			<result column="id" property="id" />
			<result column="item_name" property="name" />
			<result column="required" property="required" />
			<result column="depends_on" property="dependsOn" />
			<result column="item_type" property="itemType" />
			<result column="item_data" property="itemData" />
		</collection>
	</resultMap>

	<select id="listProjectTemplateByUuids" resultMap="ProjectTemplateResultMap">
		SELECT
		uuid, at.name, created_at, updated_at,
		template_uuid, id,
		ati.name item_name, required, depends_on, item_type, item_data
		FROM
		architect_template at LEFT
		JOIN architect_template_item ati
		ON(uuid =
		template_uuid)
		<if test="uuidList != null and uuidList.size > 0">
			WHERE
			uuid in
			<foreach collection="uuidList" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>

	<select id="getProjectTemplateByName" resultMap="ProjectTemplateResultMap">
		SELECT
		uuid, at.name, created_at, updated_at,
		template_uuid,
		id, ati.name item_name, required, depends_on, item_type, item_data
		FROM architect_template at LEFT
		JOIN architect_template_item ati
		ON(uuid = template_uuid)
		WHERE
		at.name = #{name}
	</select>

	<select id="countProjectTemplateByName" resultType="int">
		SELECT
		count(*)
		FROM architect_template
		WHERE name = #{name}
	</select>

	<delete id="deleteProjectTemplateByUuid">
		DELETE
		FROM
		architect_template
		WHERE uuid = #{uuid}
	</delete>

	<insert id="insertProjectTemplate">
		INSERT INTO
		architect_template(uuid, name, created_at, updated_at)
		VALUES(#{uuid},
		#{name}, now(), now())
	</insert>

</mapper>