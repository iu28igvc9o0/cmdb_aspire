<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.migu.tsg.microservice.atomicservice.rbac.dao.UserClassifyDao" >
  <resultMap id="BaseResultMap" type="com.migu.tsg.microservice.atomicservice.rbac.dao.po.UserClassify" >
    <id column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="user_classify_name" property="userClassifyName" jdbcType="VARCHAR" />
    <result column="namespace" property="namespace" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_user_classify
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.migu.tsg.microservice.atomicservice.rbac.dao.po.UserClassify" >
    insert into t_user_classify (uuid, user_classify_name, namespace, 
      description, creator, last_update_time
      )
    values (#{uuid,jdbcType=VARCHAR}, #{userClassifyName,jdbcType=VARCHAR}, #{namespace,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.migu.tsg.microservice.atomicservice.rbac.dao.po.UserClassify" >
    update t_user_classify
    set user_classify_name = #{userClassifyName,jdbcType=VARCHAR},
      namespace = #{namespace,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select uuid, user_classify_name, namespace, description, creator, last_update_time
    from t_user_classify
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select uuid, user_classify_name, namespace, description, creator, last_update_time
    from t_user_classify
  </select>
  <select id="findListBySystemId" resultType="java.util.HashMap" >
    SELECT
        tmp1.uuid uuid,
        tmp1.user_classify_name userClassifyName,
        tmp1.namespace namespace,
        tmp1.description description,
        tmp1.creator creator,
        tmp1.last_update_time lastUpdateTime,
        tmp2.page_custom_config pageCustomConfig,
        tmp2.system_id systemId
    FROM
        t_user_classify tmp1
    INNER JOIN t_user_classify_page_config tmp2 ON tmp1.uuid = tmp2.user_classify_uuid where tmp2.system_id = #{systemId}
  </select>
  <select id="findListById" resultType="com.migu.tsg.microservice.atomicservice.rbac.dto.UserClassifyReq">
    SELECT
        tmp1.uuid uuid,
        tmp1.user_classify_name userClassifyName,
        tmp1.namespace namespace,
        tmp1.description description,
        tmp1.creator creator,
        tmp1.last_update_time lastUpdateTime,
        tmp2.customizedview_id customizedviewId,
        tmp3.module_id pageCode,
        tmp3.content pageCustomConfig,
        tmp3.systemId systemId,
        tmp3.name customizedviewName,
        tmp3.page_type pageType
    FROM
        t_user_classify tmp1
    INNER JOIN t_user_classify_page_config tmp2 ON tmp1.uuid = tmp2.user_classify_uuid
    left join t_cfg_module_customizedview tmp3 on tmp2.customizedview_id = tmp3.id
      where tmp1.uuid in (
      <foreach collection="userClassifyIdList" item="item"  index="index" separator=",">
          #{item,jdbcType=BIGINT}
      </foreach>
      )
  </select>
</mapper>