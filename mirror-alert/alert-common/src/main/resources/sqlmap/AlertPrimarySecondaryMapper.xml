<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aspire.mirror.alert.server.dao.primarySecondary.AlertPrimarySecondaryMapper">
    <!-- 定义返回结果结果集 -->
    <resultMap id="resultMap" type="com.aspire.mirror.alert.server.dao.primarySecondary.po.AlertPrimarySecondary">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="device_relation_type" property="deviceRelationType" jdbcType="VARCHAR"/>
        <result column="primary_idc" property="primaryIdc" jdbcType="VARCHAR"/>
        <result column="primary_ip" property="primaryIp" jdbcType="VARCHAR"/>
        <result column="primary_moni_index" property="primaryMoniIndex" jdbcType="VARCHAR"/>
        <result column="primary_alert_level" property="primaryAlertLevel" jdbcType="VARCHAR"/>
        <result column="primary_option_condition" property="primaryOptionCondition" jdbcType="VARCHAR"/>
        <result column="operate_user" property="operateUser" jdbcType="VARCHAR"/>
        <result column="secondary_option_condition" property="secondaryOptionCondition" jdbcType="VARCHAR"/>
        <result column="creater" property="creater" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="editer" property="editer" jdbcType="VARCHAR"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="primaryAlertCount" property="primaryAlertCount" jdbcType="INTEGER"/>
        <result column="secondaryAlertCount" property="secondaryAlertCount" jdbcType="INTEGER"/>
        <result column="newestSecondaryDate" property="newestSecondaryDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, description, status, device_relation_type, primary_idc, primary_ip, primary_moni_index,
        primary_alert_level, primary_option_condition, operate_user, secondary_option_condition,
        creater, created_at, editer, updated_at
    </sql>
    <!-- list查询 -->
    <select id="list" resultMap="resultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM alert_primary_secondary where is_delete=0
    </select>
    <!-- list查询 -->
    <select id="listEffective" resultMap="resultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM alert_primary_secondary where is_delete=0 and status = '1'
    </select>
    <sql id="findPageWithWhere">
        <where>
            is_delete=0
            <if test="id != null">
                and id = #{id,jdbcType=BIGINT}
            </if>
            <if test="name != null and name != ''">
                and name LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
            </if>
            <if test="description != null and description != ''">
                and description = #{description,jdbcType=VARCHAR}
            </if>
            <if test="status != null and status != ''">
                and status = #{status,jdbcType=VARCHAR}
            </if>
            <if test="operateUser != null and operateUser != ''">
                and operate_user = #{operateUser,jdbcType=VARCHAR}
            </if>
            <if test="primaryOptionCondition != null and primaryOptionCondition != ''">
                and primary_option_condition = #{primaryOptionCondition,jdbcType=VARCHAR}
            </if>
            <if test="secondaryOptionCondition != null and secondaryOptionCondition != ''">
                and secondary_option_condition = #{secondaryOptionCondition,jdbcType=VARCHAR}
            </if>
            <if test="creater != null and creater != ''">
                and creater = #{creater,jdbcType=VARCHAR}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt,jdbcType=TIMESTAMP}
            </if>
            <if test="editer != null and editer != ''">
                and editer = #{editer,jdbcType=VARCHAR}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt,jdbcType=TIMESTAMP}
            </if>
        </where>
    </sql>
    <!-- list查询 -->
    <select id="listByEntity" resultMap="resultMap" parameterType="com.aspire.mirror.alert.server.dao.primarySecondary.po.AlertPrimarySecondary">
        SELECT
        <include refid="Base_Column_List"/>
        FROM alert_primary_secondary
        <include refid="findPageWithWhere"/> order by created_at desc
    </select>
    <!-- Get one 查询 -->
    <select id="get" parameterType="java.lang.String" resultMap="resultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM alert_primary_secondary
        WHERE id = #{id} and is_delete=0
    </select>
    <select id="checkName" parameterType="java.lang.String" resultMap="resultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM alert_primary_secondary
        WHERE name = #{name} and is_delete=0
    </select>
    <select id="findPageWithResult" parameterType="com.aspire.mirror.alert.server.vo.primarySecondary.AlertPrimarySecondaryVo"
            resultMap="resultMap">
        select
        <include refid="Base_Column_List"/> ,primaryAlertCount, secondaryAlertCount, newestSecondaryDate
        from alert_primary_secondary a left JOIN (SELECT primary_secondary_id, count(distinct primary_secondary_alert_id) primaryAlertCount, count(primary_secondary_id) secondaryAlertCount, max(cur_moni_time) newestSecondaryDate from alert_primary_secondary_alerts GROUP BY primary_secondary_id
        ) b on a.id=b.primary_secondary_id
        <include refid="findPageWithWhere"/> order by created_at desc
        limit #{begin},#{pageSize}
    </select>
    <select id="findPageWithCount" parameterType="com.aspire.mirror.alert.server.vo.primarySecondary.AlertPrimarySecondaryVo"
            resultType="Integer">
        select count(1)
        from alert_primary_secondary
        <include refid="findPageWithWhere"/>
    </select>
    <!-- 新增记录 -->
    <insert id="insert" parameterType="com.aspire.mirror.alert.server.dao.primarySecondary.po.AlertPrimarySecondary" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO alert_primary_secondary
        (
            `name`,
            `description`,
            `status`,
            `device_relation_type`,
            `primary_idc`,
            `primary_ip`,
            `primary_moni_index`,
            `primary_alert_level`,
            `primary_option_condition`,
            `operate_user`,
            `secondary_option_condition`,
            `creater`,
            `created_at`,
            `editer`,
            `updated_at`
        ) VALUES (
            #{name, jdbcType=VARCHAR},
            #{description, jdbcType=VARCHAR},
            #{status, jdbcType=VARCHAR},
            #{deviceRelationType, jdbcType=VARCHAR},
            #{primaryIdc, jdbcType=VARCHAR},
            #{primaryIp, jdbcType=VARCHAR},
            #{primaryMoniIndex, jdbcType=VARCHAR},
            #{primaryAlertLevel, jdbcType=VARCHAR},
            #{primaryOptionCondition, jdbcType=VARCHAR},
            #{operateUser, jdbcType=VARCHAR},
            #{secondaryOptionCondition, jdbcType=VARCHAR},
            #{creater, jdbcType=VARCHAR},
            #{createdAt, jdbcType=TIMESTAMP},
            #{editer, jdbcType=VARCHAR},
            #{updatedAt, jdbcType=TIMESTAMP}
        )
    </insert>
    <!-- 修改记录 -->
    <update id="update" parameterType="com.aspire.mirror.alert.server.dao.primarySecondary.po.AlertPrimarySecondary">
        UPDATE alert_primary_secondary SET
        `name` = #{name},
        `description` = #{description},
        `status` = #{status},
        `device_relation_type` = #{deviceRelationType},
        `primary_idc` = #{primaryIdc},
        `primary_ip` = #{primaryIp},
        `primary_moni_index` = #{primaryMoniIndex},
        `primary_alert_level` = #{primaryAlertLevel},
        `primary_option_condition` = #{primaryOptionCondition},
        `operate_user` = #{operateUser},
        `secondary_option_condition` = #{secondaryOptionCondition},
        `editer` = #{editer},
        `updated_at` = #{updatedAt, jdbcType=TIMESTAMP}
        WHERE
        `id` = #{id}
    </update>

    <!-- 删除记录 -->
    <update id="delete" parameterType="java.lang.String">
        UPDATE alert_primary_secondary SET
        `is_delete` = 1, updated_at=now()
        WHERE
        `id` in
        <foreach collection="ids" index="index" item="id"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <update id="status" parameterType="java.lang.String">
        UPDATE alert_primary_secondary SET
        `status` = #{status}, updated_at=now()
        WHERE
        `id` in
        <foreach collection="ids" index="index" item="id"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    
    <select id="findprimayRalate" parameterType="com.aspire.mirror.alert.server.vo.primarySecondary.AlertPrimarySecondaryVo"
            resultType="map">
        select count(distinct device_id)deviceCount,count(*) alertCount,biz_sys
         from alert_primary_secondary_alerts 
        where primary_secondary_id =   #{primaryId}
          and alert_type = #{alertType}
          group by biz_sys 
          order by biz_sys
           <if test="begin != null and pageSize!=null">
                limit #{begin},#{pageSize}
            </if>
    </select>
    <select id="findprimayRalateCount" parameterType="com.aspire.mirror.alert.server.vo.primarySecondary.AlertPrimarySecondaryVo"
            resultType="Integer">
            select count(*) from(
         select biz_sys
         from alert_primary_secondary_alerts 
        where primary_secondary_id =   #{primaryId}
          and alert_type = #{alertType}
          group by biz_sys)a
    </select>
</mapper>