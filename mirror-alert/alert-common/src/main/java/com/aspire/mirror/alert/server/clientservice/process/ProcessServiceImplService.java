
package com.aspire.mirror.alert.server.clientservice.process;


import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "ProcessServiceImplService", targetNamespace = "http://impl.webservice.platform.hotent.com/", wsdlLocation = "http://127.0.0.1:8080/bpmx/service/ProcessService?wsdl")
public class ProcessServiceImplService
    extends Service
{
    private static String bpmWsdlUrl;
//    private final static URL PROCESSSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(ProcessServiceImplService.class.getName());

//    static {
//        URL url = null;
//        try {
//            URL baseUrl;
//            baseUrl = ProcessServiceImplService.class.getResource(".");
//            url = new URL(baseUrl, bpmWsdlUrl);
//            System.out.println("url:"+bpmWsdlUrl);
//        } catch (MalformedURLException e) {
//            logger.warning("Failed to create URL for the wsdl Location: "+bpmWsdlUrl+", retrying as a local file");
//            logger.warning(e.getMessage());
//        }
//        PROCESSSERVICEIMPLSERVICE_WSDL_LOCATION = url;
//    }

    public ProcessServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ProcessServiceImplService() throws MalformedURLException {
        super(new URL(bpmWsdlUrl), new QName("http://impl.webservice.platform.hotent.com/", "ProcessServiceImplService"));
    }

    public static void setBpmWsdlUrl(String bpmWsdlUrl) {
        ProcessServiceImplService.bpmWsdlUrl = bpmWsdlUrl;
    }

    /**
     * 
     * @return
     *     returns ProcessService
     */
    @WebEndpoint(name = "ProcessServiceImplPort")
    public ProcessService getProcessServiceImplPort() {
        return super.getPort(new QName("http://impl.webservice.platform.hotent.com/", "ProcessServiceImplPort"), ProcessService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProcessService
     */
    @WebEndpoint(name = "ProcessServiceImplPort")
    public ProcessService getProcessServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://impl.webservice.platform.hotent.com/", "ProcessServiceImplPort"), ProcessService.class, features);
    }

}
